pipeline {
  agent { label 'client'}
  stages {
    stage('Exec client method') {
      agent { label 'server'}
      when { expression { return params.CheckBefore } }
       steps {
        // マスターにてデータを保管する
        dir('data') {
          bat "loader2021 -U APP ..\\loader\\execunittest.xml ${env.WORKSPACE}\\SyncTest SyncTest:${params.TestClass}:TestAfterSyncServer"
          junit 'result.xml'
          stash includes: '*server.dat', name: 'server-result'
        }
      }
    }
    stage('Check Data on Client before sync') {
      when { expression { return params.CheckBefore } }
       steps {
        // クライアントにてデータを取得し、比較する
        dir('data') {
          unstash 'server-result'
          bat "loader2021 -U APP ..\\loader\\execunittest.xml ${env.WORKSPACE}\\SyncTest SyncTest:${params.TestClass}:TestAfterSyncClient"
          junit 'result.xml'
        }
      }
    }
    /*stage('GetConfig') {
       steps {
        // マスターからデータベースをダウンロードする
        bat 'loader2021 loader\\execmethod.xml =##class(SyncData.ODBC).ClearJournal(0,1)'
        bat 'loader2021 loader\\execmethod.xml =##class(SyncData.ODBC).GetConfig()'
      }
    } 
    stage('RestoreDB') {
       steps {
        // マスターからデータベースをダウンロードする
        bat 'loader2021 loader\\execmethod.xml =##class(SyncData.ODBC).RestoreDB(3)'
      }
    }*/ 
    stage('Create Data on Server') {
      agent { label 'server01'}
      when { expression { return params.LoadData } }
      steps {
        // マスターにてデータを作成する
        bat "loader2021 -U APP loader\\execunittest.xml ${env.WORKSPACE}\\SyncTest SyncTest:${params.TestClass}:TestBeforeSyncServer"
      }
    }
    stage('Create Data on Client') {
      when { expression { return params.LoadData } }
      steps {        // クライアントにてデータを作成する
        bat "loader2021 -U APP loader\\execunittest.xml ${env.WORKSPACE}\\SyncTest SyncTest:${params.TestClass}:TestBeforeSyncClient"
      }
    }

    stage('Sync') {
       steps {
        // 同期実行
        bat 'loader2021 loader\\execmethod.xml =##class(SyncData.ODBC).ServerToClient()'
        bat 'loader2021 loader\\execmethod.xml =##class(SyncData.ODBC).ClientToServer()'
        bat 'loader2021 loader\\execmethod.xml =##class(SyncData.ODBC).Commit()'
      }
    }

    stage('Get Data on Server') {
      agent { label 'server01'}
       steps {
        // マスターにてデータを保管する
        dir('data') {
          bat "loader2021 -U APP ..\\loader\\execunittest.xml ${env.WORKSPACE}\\SyncTest SyncTest:${params.TestClass}:TestAfterSyncServer"
          junit 'result.xml'
          stash includes: '*server.dat', name: 'server-result'
        }
      }
    }
    stage('Check Data on Client') {
       steps {
        // クライアントにてデータを取得し、比較する
        dir('data') {
          unstash 'server-result'
          bat "loader2021 -U APP ..\\loader\\execunittest.xml ${env.WORKSPACE}\\SyncTest SyncTest:${params.TestClass}:TestAfterSyncClient"
          junit 'result.xml'
        }
      }
    }

  }
}
